---
version: '3.7'
services:
  app-prefect-orion:
    # image: python:3.9.16-slim-bullseye
    image: prefecthq/prefect:2.7.7-python3.9
    # image: prefecthq/server:core-1.4.1
    restart: always
    container_name: prefect-app
    working_dir: /opt/prefect
    volumes:
      - ./flows-prefect/:/opt/prefect/flows
      - ./blocks/:/opt/prefect/blocks
      - ./requirements.txt:/opt/prefect/requirements.txt
      - ./data/:/opt/prefect/data
      - ./.google/creds.json:/root/.google/creds.json:ro
      - prefect_data:/root/.prefect
    ports:
      - 4200:4200
    depends_on:
      - postgres-prefect
    command: 
      - bash
      - -c
      - |
        echo "Install Dependencies"
        python -m pip install --upgrade pip setuptools wheel --no-cache-dir
        pip install -r requirements.txt --trusted-host pypi.python.org --no-cache-dir
        echo " "
        echo "#########################################################################"
        echo "###################### Prefect App DEZOOMCAMP 2023 ######################"
        echo "#########################################################################"
        prefect orion start --host 0.0.0.0
        prefect block register -m prefect_gcp
        python blocks/make_gcp_blocks.py
        python flows/etl_web_to_gcs.py
        prefect deployment build flows/etl_web_to_gcs.py:dezoom23 -n dezoomgreen -q test
    environment:
      PREFECT_ORION_API_HOST: 127.0.0.1
      PREFECT_ORION_API_PORT: 4200
      PREFECT_ORION_DATABASE_CONNECTION_URL: ${DB_CONNECTION_URL}
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      # PREFECT_API_URL: ${PREFECT_API_URL}
      # PREFECT_API_URL: http://127.0.0.1:4200/api

  postgres-prefect:
    container_name: prefect-postgres
    expose:
      - 5432
    command:
      - postgres
      - -c
      - max_connections=150
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
        - postgres:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s
    image: postgres:14.1-alpine
    restart: always

volumes:
  postgres:
  prefect_data: